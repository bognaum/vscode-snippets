{
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"!React-runtime": {
		"scope": "html,php",
		"prefix": "!",
		"body": [
			"<!DOCTYPE html>",
			"<html>",
			"<head>",
			"\t<meta charset=\"UTF-8\" />",
			"\t<title>React runtime app</title>",
			"\t<script src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>",
			"\t<script src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>",
			"\t<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>",
			"</head>",
			"<body>",
			"\t<div id=\"root\"></div>",
			"\t<script type=\"text/babel\">",
			"",
			"\t\tconst container = document.getElementById('root');",
			"\t\tconst root = ReactDOM.createRoot(container);",
			"\t\troot.render(<MyApp />);",
			"",
			"\t\tfunction MyApp() {",
			"\t\t\treturn (",
			"\t\t\t\t<h1>Hello, world!</h1>",
			"\t\t\t);",
			"\t\t}",
			"",
			"\t</script>",
			"</body>",
			"</html>",
		],
		"description": "React component"
	},
	"React component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "!",
		"body": [
			"import      R     from 'react';",
			"import * as RX    from 'redux';",
			"import * as RRX   from 'react-redux';",
			"import      Thunk from 'redux-thunk';",
			"",
			"export default function ${2:MyComponent} (${3:props}) {",
			"\treturn (",
			"\t\t${3:}",
			"\t);",
			"}",
		],
		"description": "React component"
	},
	"React onEvent": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "On",
		"body": ["on${1:Event}={() => {${2:}}}"],
		"description": "React onEvent"
	},
	"React useState": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "UST",
		"body": ["[${CLIPBOARD:}, set${CLIPBOARD/^(.)(.*)/${1:/upcase}$2/}] = ${3:R.}useState(${4:initial})"],
		"description": "React useState"
	},
	"React useState 2": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "USt",
		"body": ["[${TM_SELECTED_TEXT:}, set${TM_SELECTED_TEXT/^(.)(.*)/${1:/upcase}$2/}] = ${3:R.}useState(${4:initial})"],
		"description": "React useState"
	},
}