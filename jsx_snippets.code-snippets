{
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"React component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "!",
		"body": [
			"${1:export default }function ${2:ComponentName}(props) {",
			"\treturn (",
			"\t\t<${3:div} className=\"${4:}\">${0:}</${3:div}>",
			"\t);",
			"}",
		],
		"description": "React component"
	},
	"React onEvent": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "On",
		"body": ["on${1:Event}={() => {${2:}}}"],
		"description": "React onEvent"
	},
	"React useState 2": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "useState",
		"body": ["[${TM_SELECTED_TEXT:}, set${TM_SELECTED_TEXT/^(.)(.*)/${1:/upcase}$2/}] = useState(${4:initial})"],
		"description": "React useState"
	},
}